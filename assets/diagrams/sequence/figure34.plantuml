/'*****
License
--------------
Copyright Â© 2017 Bill & Melinda Gates Foundation
The Mojaloop files are made available by the Bill & Melinda Gates Foundation under the Apache License, Version 2.0 (the "License") and you may not use these files except in compliance with the License. You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, the Mojaloop files are distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
Contributors
--------------
This is the official list of the Mojaloop project contributors for this file.
Names of the original copyright holders (individuals or organizations)
should be listed with a '*' in the first column. People who have
contributed from an organization can be listed under the organization
that actually holds the copyright for their contributions (see the
Gates Foundation organization for an example). Those individuals should have
their names indented and be marked with a '-'. Email address can be added
optionally within square brackets <email>.
* Gates Foundation
- Name Surname <name.surname@gatesfoundation.com>

* Henk Kodde <henk.kodde@modusbox.com>
--------------
******'/

@startuml

' define actor image
sprite $actor [25x48/16] {
    0000000000010000000000000
    0000000006CAC910000000000
    0000000095101292000000000
    0000000651000119000000000
    0000000B10000018400000000
    0000001A10000016600000000
    0000000B10000017510000000
    000000083100001A210000000
    0000000191000176110000000
    000000003A866A61100000000
    0000000000466211100000000
    0003333333334443333310000
    0088888888888888888892000
    0821111111111111111118200
    8311111111111111111111A00
    A111111111111111111111A20
    A111111111111111111111A20
    A111111111111111111111A20
    A111111111111111111111A20
    A111111111111111111111A20
    A111111111111111111111A20
    A111111111111111111111A20
    A111111111111111111111A20
    A111551111111111138111A20
    A111661111111111139111A20
    A211661111111111139111A20
    A211661111111111139111A20
    A211661111161111139111A20
    A2116611111A2111139111A20
    A2116611111A2111139111A20
    A2116611111A2111139111A20
    A7669611111A211113A666B20
    36669611111A211113A666610
    00016611111A2111139111110
    00006611111A2111139100000
    00006611111A2111139100000
    00006611111A2111139100000
    00006611111A2111139100000
    00006611111A2111139100000
    00006611111A2111139100000
    00006611111A2111139100000
    00006611111A2111139100000
    00006611111A2111139100000
    00006611111A2111139100000
    00006966666B7666679100000
    0000266666666666664100000
    0000000111111111111100000
    0000000000000000000000000
}

' declaring skinparam
skinparam sequenceMessageAlign center
skinparam shadowing false
skinparam defaultFontName Arial
skinparam monochrome true
skinparam SequenceLifeLineBackgroundColor WhiteSmoke
skinparam SequenceLifeLineBorderColor Black
skinparam ActorFontStyle Bold
skinparam ActorFontSize 15
skinparam ParticipantFontStyle Bold
skinparam ParticipantFontSize 15
skinparam ParticipantBackgroundColor WhiteSmoke
skinparam ArrowColor Black

skinparam actor {
    Bordercolor none
    Backgroundcolor none
    shadowing false
}

skinparam participant {
    shadowing true
}

' declare title
' title ATM-Initiated Cash-Out example

' Actor Keys:
' participant - FSP(Payer/Payee) and Switch
' actor - Payee/Payer(OTC/Agent)

' declare actors
actor "<$actor>\nPayer" as Payer
participant "Payer\nFSP" as PayerFSP
participant "Switch" as SWITCH
participant "Payee\nFSP" as PayeeFSP
actor "<$actor>\nPayee\n(ATM)" as PayeeATM
actor "<$actor>\nPayer\n(OTC)" as PayerOTC

' start flow

Payer -> PayerFSP: Pre-generate OTP for me so that\n I can use it for ATM Cash-Out
activate PayerFSP
PayerFSP -> PayerFSP: Generate OTP
Payer <<-- PayerFSP: "12345 is your OTP"
deactivate PayerFSP
PayeeATM <<- PayerOTC: I would like to\n Cash-Out 100 USD
PayeeFSP <<- PayeeATM: I would like to receive\n 100 USD from Payer
activate PayeeFSP
PayeeFSP ->> SWITCH: **POST /transactionRequests**\n (amount = 100 USD)
activate SWITCH
PayeeFSP <<-- SWITCH: **HTTP 202** (Accepted)

activate PayerFSP
PayerFSP <<- SWITCH: **POST /transactionRequests**\n (amount = 100 USD)
PayerFSP -->> SWITCH: **HTTP 202** (Accepted)
PayerFSP -> PayerFSP: Perform optional validation
PayerFSP ->> SWITCH: **PUT /transactionRequests/**<i><ID></i>\n (Receives status)
PayerFSP <<-- SWITCH: **HTTP 200** (OK)
deactivate PayerFSP
SWITCH ->> PayeeFSP: **PUT /transactionRequests/**<i><ID></i>\n (Received status)
SWITCH <<-- PayeeFSP: **HTTP 200** (OK)
deactivate SWITCH
deactivate PayeeFSP
PayerFSP ->> SWITCH: **POST /quotes**\n (amountType = RECEIVE,\n amount = 100 USD)
activate PayerFSP
activate SWITCH
PayerFSP <<-- SWITCH: **HTTP 202** (Accepted)
SWITCH ->> PayeeFSP: **POST /quotes**\n (amountType = RECEIVE,\n amount = 100 USD)
activate PayeeFSP
SWITCH <<-- PayeeFSP: **HTTP 202** (Accepted)
PayeeFSP -> PayeeFSP: Payer fee is 1 USD for\n ATM Cash-Out
SWITCH <<- PayeeFSP: **PUT /quotes/**<i><ID></i>\n (transferAmount = 101 USD,\n payeeFspFee = 1 USD)
SWITCH -->> PayeeFSP: **HTTP 200** (OK)
deactivate PayeeFSP
SWITCH ->> PayerFSP: **PUT /quotes/**<i><ID></i>\n (transferAmount = 101 USD,\n payeeFspFee = 1 USD)
SWITCH <<-- PayerFSP: **HTTP 200** (OK)
deactivate SWITCH
PayerFSP -> PayerFSP: Payer fee is 1 USD in Payer FSP\n for ATM Cash-Out, total fee 2 USD
deactivate PayerFSP
PayerFSP -> PayerFSP: OTP is pre-generated
activate PayerFSP
Payer <<- PayerFSP: Use you pre-generated OTP to accept\n transaction of 100 USD, 2 USD\n in fees.
PayerFSP ->> SWITCH: **GET /authorizations/**\n <i>{TransactionRequestID}</i>/\n (amount = 100 USD, fees = 2 USD,\n retriesLeft = 2, type = OTP)
PayerFSP <<-- SWITCH: **HTTP 202** (Accepted)
SWITCH ->> PayeeFSP: **GET /authorizations/**\n <i>{TransactionRequestID}</i>/\n (amount = 100 USD, fees = 2 USD,\n retriesLeft = 2, type = OTP)
SWITCH <<-- PayeeFSP: **HTTP 202** (Accepted)
PayeeFSP ->> PayeeATM: Total fee for Cash-Out of\n 100 USD is 2 USD
PayeeATM ->> PayerOTC: Please enter you OTP\n to confirm Cash-Out of 100 USD,\n fee is 2 USD
PayeeATM ->> PayerOTC: Enters "12345"
PayeeFSP ->> PayeeATM: "12345" is the OTP
SWITCH <<- PayeeFSP: **PUT /authorizations/***\n <i>{transactionRequestID}</i>\n (otp = "12345")
SWITCH -->> PayeeFSP: **HTTP 200** (OK)
PayerFSP <<- SWITCH: **PUT /authorizations/***\n <i>{transactionRequestID}</i>\n (otp = "12345")
PayerFSP -->> SWITCH: **HTTP 200** (OK)
PayerFSP -> PayerFSP: Validate OTP sent by Payee FSP,\n OTP OK
deactivate PayerFSP
PayerFSP -> PayerFSP: Reserve 102 USD from Payer\n account, 101 USD to Switch\n account, 1 USD to fee account
activate PayerFSP
PayerFSP ->> SWITCH: **POST /transfers**\n (amount = 101 USD)
activate SWITCH
PayerFSP <<-- SWITCH: **HTTP 202** (Accepted)
SWITCH -> SWITCH: Reserve 101 USD from Payer FSP\n account to Payee FSP account
SWITCH ->> PayeeFSP: **POST /transfers**\n (amount = 101 USD)
activate PayeeFSP
SWITCH <<-- PayeeFSP: **HTTP 202** (Accepted)
PayeeFSP -> PayeeFSP: Transfer 101 USD from Switch\n account, 100 USD to Payee,\n 1 USD to fee account
PayeeFSP ->> PayeeATM: Dispense 100 USD in Cash
PayeeATM ->> PayerOTC: Here is your 100 USD in cash
SWITCH <<- PayeeFSP: **PUT /transfers/** <i><ID></i>
SWITCH -->> PayeeFSP: **HTTP 200** (OK)
deactivate PayeeFSP
SWITCH <- SWITCH: Commit reserved transfer
SWITCH ->> PayerFSP: **PUT /transfers/** <i><ID></i>
SWITCH <<-- PayerFSP: **HTTP 200** (OK)
deactivate SWITCH
PayerFSP <- PayerFSP: Commit reserved transfer
Payer <- PayerFSP: Transfer successful,\n you should receive 100 USD\n in cash from ATM. You have\n paid 2 USD in fees.
deactivate PayerFSP
@enduml
